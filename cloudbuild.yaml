steps:
# 1) Install Python dependencies (for coverage validation script)
- name: 'python:3.11'
  id: 'install-deps'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      set -e
      python -m venv /workspace/venv
      source /workspace/venv/bin/activate
      pip install --upgrade pip
      pip install requests lxml google-auth

# 2) Clean old tests
- name: 'maven:3.9.4-eclipse-temurin-17'
  id: 'clean-old-tests'
  entrypoint: 'bash'
  dir: 'backend'
  args:
    - '-c'
    - |
      set -e
      echo "Cleaning old test files..."
      find src/test/java -name "*Test.java" -type f -delete || true

# 3) Generate tests using Randoop
- name: 'maven:3.9.4-eclipse-temurin-17'
  id: 'generate-randoop-tests'
  entrypoint: 'mvn'
  dir: 'backend'
  args:
    - 'randoop:gentests'

# 4) Verify Java & Maven versions (debugging)
- name: 'maven:3.9.4-eclipse-temurin-17'
  id: 'verify-java'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      java -version
      mvn -version

# 5) Run tests + generate JaCoCo coverage report
- name: 'maven:3.9.4-eclipse-temurin-17'
  id: 'run-tests'
  entrypoint: 'mvn'
  dir: 'backend'
  args:
    - 'clean'
    - 'test'
    - 'jacoco:report'

# 6) Upload reports + generated tests to GCS
- name: 'gcr.io/cloud-builders/gsutil'
  id: 'upload-reports'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      set -e
      echo "Uploading reports to gs://runtime-terror-logs/reports/$SHORT_SHA ..."
      gsutil -m cp -r backend/target gs://runtime-terror-logs/reports/$SHORT_SHA/
      gsutil -m cp -r backend/target/generated-test-sources/randoop gs://runtime-terror-logs/reports/$SHORT_SHA/generated-tests/

# 7) Check coverage threshold (example: 40%)
- name: 'python:3.11'
  id: 'check-coverage'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      set -e
      source /workspace/venv/bin/activate
      python tools/check_coverage.py backend/target/site/jacoco/jacoco.xml 0.40

timeout: '1800s'

artifacts:
  objects:
    location: 'gs://runtime-terror-logs/build-artifacts/${SHORT_SHA}/'
    paths:
      - 'backend/target/**'
      - 'backend/target/generated-test-sources/randoop/**'

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'
  diskSizeGb: 10
