steps:
# 1) Python dependencies
- name: 'python:3.11'
  id: 'install-deps'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      set -e
      python -m venv /workspace/venv
      source /workspace/venv/bin/activate
      pip install --upgrade pip
      pip install requests lxml google-auth

# 2) Clean old tests
- name: 'maven:3.9.4-eclipse-temurin-17'
  id: 'clean-old-tests'
  entrypoint: 'bash'
  dir: 'backend'
  args:
    - '-c'
    - |
      set -e
      find src/test/java -name "*Test.java" -type f -delete || true

# 3) Generate Randoop tests
- name: 'maven:3.9.4-eclipse-temurin-17'
  id: 'generate-randoop-tests'
  entrypoint: 'mvn'
  dir: 'backend'
  args:
    - 'org.randoop:randoop-maven-plugin:4.7.2:gentests'

# 4) Verify Java & Maven
- name: 'maven:3.9.4-eclipse-temurin-17'
  id: 'verify-java'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      java -version
      mvn -version

# 5) Run tests + JaCoCo
- name: 'maven:3.9.4-eclipse-temurin-17'
  id: 'run-tests'
  entrypoint: 'mvn'
  dir: 'backend'
  args:
    - 'clean'
    - 'test'
    - 'jacoco:report'

# 6) Upload reports & tests
- name: 'gcr.io/cloud-builders/gsutil'
  id: 'upload-reports'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      set -e
      REPORTS_DIR=gs://runtime-terror-logs/reports/${SHORT_SHA}
      gsutil -m cp -r backend/target "$REPORTS_DIR/"
      gsutil -m cp -r backend/target/generated-test-sources/randoop "$REPORTS_DIR/generated-tests/"

# 7) Check coverage
- name: 'python:3.11'
  id: 'check-coverage'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      set -e
      source /workspace/venv/bin/activate
      python tools/check_coverage.py backend/target/site/jacoco/jacoco.xml 0.40

timeout: '1800s'

artifacts:
  objects:
    location: 'gs://runtime-terror-logs/build-artifacts/${SHORT_SHA}/'
    paths:
      - 'backend/target/**'
      - 'backend/target/generated-test-sources/randoop/**'

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'
  diskSizeGb: 10
