steps:
# 1) Install Python dependencies
- name: 'python:3.11'
  id: 'install-deps'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      python -m venv /workspace/venv
      source /workspace/venv/bin/activate
      pip install --upgrade pip
      pip install requests google-auth lxml google-cloud-aiplatform vertexai

# 2) Generate tests using EvoSuite
- name: 'maven:3.9.4-eclipse-temurin-17'
  id: 'generate-tests'
  entrypoint: 'bash'
  dir: 'backend'
  args:
    - '-c'
    - |
      echo "Cleaning old tests..."
      find src/test/java -name "*Test.java" -type f -delete || true
      echo "Running EvoSuite..."
      mvn evosuite:generate evosuite:export
      echo "Generated test files:"
      find src/test/java -name "*Test.java" -type f
# 3) Verify Java version and run Maven tests
- name: 'maven:3.9.4-eclipse-temurin-17'  # Changed from 11 to 17
  id: 'verify-java'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      echo "Java version (should be 17):"
      java -version
      echo "Maven version:"
      mvn -version

- name: 'maven:3.9.4-eclipse-temurin-17'  # Changed from 11 to 17
  id: 'run-tests'
  entrypoint: 'mvn'
  dir: 'backend'
  args: 
    - 'clean'
    - 'test'
    - 'jacoco:report'

# 4) Upload reports to GCS
- name: 'gcr.io/cloud-builders/gsutil'
  id: 'upload-reports'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      gsutil -m cp -r backend/target gs://runtime-terror-logs/reports/$SHORT_SHA/
      gsutil -m cp -r backend/src/test/java gs://runtime-terror-logs/reports/$SHORT_SHA/tests/

# 5) Check coverage
- name: 'python:3.11'
  id: 'check-coverage'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      source /workspace/venv/bin/activate
      python tools/check_coverage.py backend/target/site/jacoco/jacoco.xml 0.40

timeout: '1800s'

artifacts:
  objects:
    location: 'gs://runtime-terror-logs/build-artifacts/${SHORT_SHA}/'
    paths: 
      - 'backend/target/**'
      - 'backend/src/test/java/**'

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'
  diskSizeGb: 10
