steps:
# 1) Install Python dependencies (for coverage validation script)
- name: 'python:3.11'
  id: 'install-deps'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      set -e
      python -m venv /workspace/venv
      source /workspace/venv/bin/activate
      pip install --upgrade pip
      pip install requests lxml google-auth

# 2) Clean old tests & generate new ones with EvoSuite
- name: 'maven:3.9.4-eclipse-temurin-17'
  id: 'generate-tests'
  entrypoint: 'bash'
  dir: 'backend'
  args:
    - '-c'
    - |
      set -e
      echo "Cleaning old test files..."
      find src/test/java -name "*Test.java" -type f -delete || true
      echo "Running EvoSuite test generation..."
      mvn -B evosuite:generate evosuite:export
      echo "Generated test files:"
      find src/test/java -name "*Test.java" -type f || echo "No tests generated!"

# 3) Verify Java & Maven versions (debugging step)
- name: 'maven:3.9.4-eclipse-temurin-17'
  id: 'verify-java'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      java -version
      mvn -version

# 4) Run tests + generate JaCoCo coverage report
- name: 'maven:3.9.4-eclipse-temurin-17'
  id: 'run-tests'
  entrypoint: 'mvn'
  dir: 'backend'
  args: 
    - 'clean'
    - 'test'
    - 'jacoco:report'

# 5) Upload reports + generated tests to GCS
- name: 'gcr.io/cloud-builders/gsutil'
  id: 'upload-reports'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      set -e
      REPORTS_DIR="gs://runtime-terror-logs/reports/$SHORT_SHA"
      echo "Uploading reports to $REPORTS_DIR ..."
      gsutil -m cp -r backend/target "$REPORTS_DIR/"
      gsutil -m cp -r backend/src/test/java "$REPORTS_DIR/tests/"

# 6) Check coverage threshold (example: 40%)
- name: 'python:3.11'
  id: 'check-coverage'
  entrypoint: 'bash'
  args:
    - '-c'
    - |
      set -e
      source /workspace/venv/bin/activate
      python tools/check_coverage.py backend/target/site/jacoco/jacoco.xml 0.40

timeout: '1800s'

artifacts:
  objects:
    location: 'gs://runtime-terror-logs/build-artifacts/${SHORT_SHA}/'
    paths: 
      - 'backend/target/**'
      - 'backend/src/test/java/**'

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'
  diskSizeGb: 10
