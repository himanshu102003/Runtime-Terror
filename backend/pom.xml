<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
                             https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.0.4</version>
    <relativePath/>
  </parent>

  <groupId>com.github.yildizmy</groupId>
  <artifactId>e-wallet</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>e-wallet</name>
  <description>Spring Boot app used for digital wallet transactions</description>

  <properties>
    <java.version>17</java.version>
    <projectlombok.version>1.18.34</projectlombok.version>
    <mapstruct.version>1.6.2</mapstruct.version>
    <junit.jupiter.version>5.11.3</junit.jupiter.version>
    <mockito.version>5.12.0</mockito.version>
    <swagger.version>2.2.25</swagger.version>
    <randoop.version>4.10.2</randoop.version>
    <jacoco.version>0.8.12</jacoco.version>
    <commons-text.version>1.13.0</commons-text.version>
  </properties>

  <dependencies>
    <!-- Spring Boot Starters -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <!-- Utilities -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-text</artifactId>
      <version>${commons-text.version}</version>
    </dependency>

    <!-- JWT -->
    <dependency>
      <groupId>io.jsonwebtoken</groupId>
      <artifactId>jjwt-api</artifactId>
      <version>0.12.6</version>
    </dependency>
    <dependency>
      <groupId>io.jsonwebtoken</groupId>
      <artifactId>jjwt-impl</artifactId>
      <version>0.12.6</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>io.jsonwebtoken</groupId>
      <artifactId>jjwt-jackson</artifactId>
      <version>0.12.6</version>
      <scope>runtime</scope>
    </dependency>

    <!-- JUnit 5 & Mockito -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- Spring Boot Testing -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-test</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Lombok & MapStruct -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${projectlombok.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct</artifactId>
      <version>${mapstruct.version}</version>
    </dependency>

    <!-- H2 for testing -->
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Randoop runtime (needed for test generation) -->
    <dependency>
      <groupId>randoop</groupId>
      <artifactId>randoop</artifactId>
      <version>${randoop.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- Spring Boot Maven Plugin -->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
            </exclude>
          </excludes>
        </configuration>
      </plugin>

      <!-- Compiler Plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.13.0</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <annotationProcessorPaths>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${projectlombok.version}</version>
            </path>
            <path>
              <groupId>org.mapstruct</groupId>
              <artifactId>mapstruct-processor</artifactId>
              <version>${mapstruct.version}</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>

      <!-- Randoop Plugin -->
      <plugin>
        <groupId>org.randoop</groupId>
        <artifactId>randoop-maven-plugin</artifactId>
        <version>${randoop.version}</version>
        <executions>
          <execution>
            <id>generate-tests</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>gentests</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/generated-tests</outputDirectory>
              <testPackageName>com.github.yildizmy.service</testPackageName>
              <classListFile>${project.basedir}/randoop-classes.txt</classListFile>
              <junitOutputDir>${project.build.directory}/generated-test-sources/randoop</junitOutputDir>
              <timeLimitInSeconds>60</timeLimitInSeconds>
            </configuration>
          </execution>
        </executions>
      </plugin>
             <!-- Randoop Maven Plugin -->
<plugin>
    <groupId>org.randoop</groupId>
    <artifactId>randoop-maven-plugin</artifactId>
    <version>4.7.2</version>
    <executions>
        <execution>
            <id>generate-tests</id>
            <phase>generate-test-sources</phase>
            <goals>
                <goal>gentests</goal>
            </goals>
            <configuration>
                <!-- Package(s) to generate tests for -->
                <testClassRegex>com.github.yildizmy.service.*</testClassRegex>
                <junitOutputDir>${project.build.directory}/generated-test-sources/randoop</junitOutputDir>
                <timeoutInSeconds>60</timeoutInSeconds>
                <outputLimit>500</outputLimit>
            </configuration>
        </execution>
    </executions>
</plugin>
      <!-- JaCoCo Plugin -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <phase>verify</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>
</project>
